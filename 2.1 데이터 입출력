1. 논리 데이터 모델링
 -개체, 속성, 관계
 
2. 개체-관계 모델
 -요구사항으로 부터 얻어낸 정보들을 개체, 애트리뷰트, 관계로 기술하는 데이터모델
 -현실 세계에 존재하는 데이터와 그들간의 관계를 사람이 이해할 수 있는 형태로 명확하게 표현하기 위해서 가장 널리 사용되고 있는 모델
 
3. 개체-관계 다이어그램 기호
 -개체:사각형
 -관계:마름모
 -속성:타원
 -다중 값 속성: 이중타원
 -관계-속성: 선
 
4. 정규화
 -관계형 데이터베이스의 설계에서 중복을 최소화하게 데이터를 구조화하는 프로세스

5. BCNF
 -3차 정규형을 만족하면서 모든 결정자가 후보키 집합에 속한 정규형
 
6. 물리 데이터 모델링
 -논리모델을 적용하고자 하는 기술에 맞도록 상세화해 가는 과정

7. 물리 데이터 모델링의 절차
 -개체를 테이블로 변환
 -속성을 컬럼으로 변환
 -UID를 기본키로 변환
 -관계를 외래키로 변환
 -컬럼 유형과 길이 정의
 -반 정규화 수행

8. 인덱스 컬럼 선정 기준
 -분포도가 좋은 컬럼은 단독적으로 생성
 -자주 조합되어 사용되는 컬럼은 결합인덱스로 생성
 
9. 클러스터 설계시 고려사항
 -UNION, DISTINCT, ORDER BY, GROUP BY가 빈번한 컬럼이면 검토대상이다
 -수정이 자주 발생하지 않는 컬럼은 검토 대상이다.
 
10. 레인지 파티셔닝
 -연속적인 숫자나 날짜를 기준으로 하는 파티셔닝 기법
 -손쉬운 관리 기법을 제공하여 과나리 시간의 단축이 가능
 -우편번호 일별 월별 분기별등 데이터에 적합
 
11. 파티셔닝의 장점
 -성능향상
 -가용성 향상
 -백업 가능
 -경합감소
 
12. 인덱스
 -전체 데의터의 검색 없이 필요한 정보를 신속히 조회가 가능하게 하는 데이터 구조
 
13. 반정규화
 -시스템 성능 향상과 개발 및 운영의 단순화를 위해 데이터 모델을 통합하는 데이터베이스 성능향상 기법
 
14. 데이터 저장소 연결 절차
 -드라이버 로딩
 -데이터베이스 연결
 -쿼리 전달
 -결과 수신
 
15. DBMS_OUTPUT 패키지
 -메시지를 버퍼에 저장하고 버퍼로부터 메시지를 읽어오기 위한 인터페이스를 제공하는 패키지
 
16. PL/SQL의 명령어 SHOW ERRORS의 역할
 -PL/SQL문 작성 후 마지막에 SHOW ERRORS 구문을 추가해주면 어느 곳에 어떤 에러가 있는지 출력해준다.
 
17. 옵티마이저 힌트
 -/*+RULE*/: 규칙 기반 접근 방식을 사용하도록 지정
 -/*+CHOOSE*/:오라클 옵티마이저 디폴트 값에 따름
 -/*+INDEX(테이블명 인덱스명)*/: 지정된 인덱스를 강제적으로 쓰게끔 지정
 -/*+USE_HASH(테이블명)*/:지정된 테이블들의 조인이 HASH-JOIN형식으로 일어나도록 유도
 -/*+USE_MERGE(테이블명)*/: 지정된 테이블들의 조인이 Sort-Merge형식으로 일어나도록 유도
 -/*+USE_NL(테이블명)*/:  지정된 테이블들의 조인이 Nested-Loop형식으로 일어나도록 유도
 
18. 실행계획
 -옵티마이저가 생성한 SQL처리 경로를 실행계획이라고 부른다
 -사용자가 작성한 sql이 요구한 데이터를 추출하기 위해 옵티마이저가 작업의 방법과 순서를 결정하는 것을 실행계획이라고 부른다.
 
19. 옵티마이저
 -사용자가 SQL로 결과를 요구하면, 처리경로는 DBMS에 내장된 옵티마이저가 자동으로 생성해주고 생성한 SQL처리경로를 실행계획이라고 부른다.
 
